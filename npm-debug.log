0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish',
1 verbose cli   '--access=public' ]
2 info using npm@3.10.10
3 info using node@v6.17.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: 'D:\\Work\\mongo_logger',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\htaha\AppData\Roaming\npm-cache\mongo_logger\1.0.0\package.tgz not in flight; packing
9 verbose correctMkdir C:\Users\htaha\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
10 info lifecycle mongo_logger@1.0.0~prepublish: mongo_logger@1.0.0
11 silly lifecycle mongo_logger@1.0.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ 'C:\\Users\\htaha\\AppData\\Roaming\\npm-cache\\mongo_logger\\1.0.0\\package.tgz',
12 verbose tar pack   'D:\\Work\\mongo_logger' ]
13 verbose tarball C:\Users\htaha\AppData\Roaming\npm-cache\mongo_logger\1.0.0\package.tgz
14 verbose folder D:\Work\mongo_logger
15 verbose addLocalTarball adding from inside cache C:\Users\htaha\AppData\Roaming\npm-cache\mongo_logger\1.0.0\package.tgz
16 verbose correctMkdir C:\Users\htaha\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
17 silly cache afterAdd mongo_logger@1.0.0
18 verbose afterAdd C:\Users\htaha\AppData\Roaming\npm-cache\mongo_logger\1.0.0\package\package.json not in flight; writing
19 verbose correctMkdir C:\Users\htaha\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
20 verbose afterAdd C:\Users\htaha\AppData\Roaming\npm-cache\mongo_logger\1.0.0\package\package.json written
21 silly publish { name: 'mongo_logger',
21 silly publish   version: '1.0.0',
21 silly publish   description: 'The most powerful mongo logger package',
21 silly publish   main: 'logger.js',
21 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/hossamt93/mongo_logger.git' },
21 silly publish   keywords: [ 'mongo', 'mongodb', 'logger', 'js logger', 'mongo logger' ],
21 silly publish   dependencies: { mongodb: '2.2.33' },
21 silly publish   author: { name: 'Hossam Taha', email: 'hossamtaha771@gmail.com' },
21 silly publish   license: 'MIT',
21 silly publish   readme: '# Mongo Logger\n\nThe most powerfull mongo logger package\n\n\n## Install\n\n```\nnpm install mongo_logger\n```\n\n## Why Mongo Logger is powerful?\n \n most of logging packages log messages as a string and most of messages contains alot of information that need to be organized,\n it mean what if we can log our message as an object of keys and values.\n It would be great !!.\n That\'s it mongo logger enables you to log not only your message but also you total document as an object, that\'s awesome isn\'t it ?\n\n ## How to use ?\n\n mongo logger has two ways to use\n\n ### 1- use mongo logger as a middleware\n\n1- import mongo logger into your app\n\n``` var mongoLogger=require(\'mongo_logger\');``` \n\n or ``` import * as mongoLogger from \'mongo_logger\' ```\n\n 2- register mongologger as middleware logger\n\n```typescript\n app.use(function(req,res,next){\n     if(res.statusCode == 200){\n         var logDoc={\n             statusCode: res.statusCode,\n             // and all the other fileds\n         }\n         mongologger.logInfo(logDoc,DBUrl)\n     }\n     // you may add another cases for logging Warn, Error and Debug\n\n  next();\n });\n ```\n\n ### 1- use mongo logger in your api Controller\n\n 1- import mongo logger into your controller\n\n```typescript\n var mongoLogger=require(\'mongo_logger\');\n\n  or \n\n  import * as mongoLogger from \'mongo_logger\'\n```\n\n 2- use mongoLogger into you api\n  \n // create your own api doc\n ```typescript\n   var Doc ={\n       statusCode: 200,\n       apiId : 1,\n       apiName: \'<your Api Name>\',\n       message : \'message\'\n   }\n   mongoLogger.LogInfo(doc,DBUrl)\n   ```\n\n## `Note`\n\n - `mongo_logger` uses currently mongodb 2.2.33 so `dbUrl` should be `mongodb://mongodb0.example.com:27017/dbName`\n\n\n ## Change log\nYou can take a look at the change log [here](https://github.com/hossamt93/mongo_logger/blob/master/CHANGELOG.md)\n\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '7494eed866b4719845824f38efbaff8384d5d240',
21 silly publish   bugs: { url: 'https://github.com/hossamt93/mongo_logger/issues' },
21 silly publish   homepage: 'https://github.com/hossamt93/mongo_logger#readme',
21 silly publish   _id: 'mongo_logger@1.0.0',
21 silly publish   _shasum: '3abd75bc982de66e3dd4575a26c51bc9aa69ecae',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name mongo_logger
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'mongo_logger',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'mongo_logger',
26 silly mapToRegistry   name: 'mongo_logger',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/mongo_logger
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading C:\Users\htaha\AppData\Roaming\npm-cache\mongo_logger\1.0.0\package.tgz
30 verbose request uri https://registry.npmjs.org/mongo_logger
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 8:03:01 AM
33 verbose request using bearer token for auth
34 verbose request id cc400264228f410a
35 http request PUT https://registry.npmjs.org/mongo_logger
36 http 403 https://registry.npmjs.org/mongo_logger
37 verbose headers { date: 'Fri, 08 May 2020 06:03:02 GMT',
37 verbose headers   'content-type': 'application/json',
37 verbose headers   'transfer-encoding': 'chunked',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'set-cookie': [ '__cfduid=db1f8499315b55e4a3292db98676fe1f01588917782; expires=Sun, 07-Jun-20 06:03:02 GMT; path=/; domain=.npmjs.org; HttpOnly; SameSite=Lax' ],
37 verbose headers   'cf-ray': '5900f9ac49dcd789-MRS',
37 verbose headers   'cf-cache-status': 'DYNAMIC',
37 verbose headers   'expect-ct': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
37 verbose headers   vary: 'Accept-Encoding',
37 verbose headers   server: 'cloudflare',
37 verbose headers   'content-encoding': 'gzip',
37 verbose headers   'cf-request-id': '02947a5fad0000d78939a63200000001' }
38 verbose request invalidating C:\Users\htaha\AppData\Roaming\npm-cache\registry.npmjs.org\mongo_logger on PUT
39 error publish Failed PUT 403
40 verbose stack Error: Package name too similar to existing packages; try renaming your package to '@hossamt93/mongo_logger' and publishing with 'npm publish --access=public' instead : mongo_logger
40 verbose stack     at makeError (C:\Users\htaha\AppData\Roaming\nvm\v6.17.0\node_modules\npm\node_modules\npm-registry-client\lib\request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (C:\Users\htaha\AppData\Roaming\nvm\v6.17.0\node_modules\npm\node_modules\npm-registry-client\lib\request.js:290:14)
40 verbose stack     at C:\Users\htaha\AppData\Roaming\nvm\v6.17.0\node_modules\npm\node_modules\npm-registry-client\lib\request.js:216:7
40 verbose stack     at Gunzip.onEnd (zlib.js:227:5)
40 verbose stack     at emitNone (events.js:91:20)
40 verbose stack     at Gunzip.emit (events.js:185:7)
40 verbose stack     at endReadableNT (_stream_readable.js:978:12)
40 verbose stack     at _combinedTickCallback (internal/process/next_tick.js:80:11)
40 verbose stack     at process._tickCallback (internal/process/next_tick.js:104:9)
41 verbose statusCode 403
42 verbose pkgid mongo_logger
43 verbose cwd D:\Work\mongo_logger
44 error Windows_NT 10.0.17134
45 error argv "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish" "--access=public"
46 error node v6.17.0
47 error npm  v3.10.10
48 error code E403
49 error Package name too similar to existing packages; try renaming your package to '@hossamt93/mongo_logger' and publishing with 'npm publish --access=public' instead : mongo_logger
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
